//
// TenantUpdateDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TenantUpdateDto: Codable, JSONEncodable, Hashable {

    public var name: String?
    public var duns: String?
    public var slogan: String?
    public var legalName: String?
    public var phone: String?
    public var webUrl: String?
    public var twitterUsername: String?
    public var facebookUrl: String?
    public var twitterUrl: String?
    public var gitHubUrl: String?
    public var linkedInUrl: String?
    public var instagramUrl: String?
    public var youTubeUrl: String?
    public var whatsAppNumber: String?
    public var supportPhoneNumber: String?
    public var taxId: String?
    public var about: String?
    public var currencyId: String?
    public var timezoneId: String?
    public var languageId: String?
    public var countryId: String?
    public var stateId: String?
    public var cityId: String?
    public var email: String?

    public init(name: String? = nil, duns: String? = nil, slogan: String? = nil, legalName: String? = nil, phone: String? = nil, webUrl: String? = nil, twitterUsername: String? = nil, facebookUrl: String? = nil, twitterUrl: String? = nil, gitHubUrl: String? = nil, linkedInUrl: String? = nil, instagramUrl: String? = nil, youTubeUrl: String? = nil, whatsAppNumber: String? = nil, supportPhoneNumber: String? = nil, taxId: String? = nil, about: String? = nil, currencyId: String? = nil, timezoneId: String? = nil, languageId: String? = nil, countryId: String? = nil, stateId: String? = nil, cityId: String? = nil, email: String? = nil) {
        self.name = name
        self.duns = duns
        self.slogan = slogan
        self.legalName = legalName
        self.phone = phone
        self.webUrl = webUrl
        self.twitterUsername = twitterUsername
        self.facebookUrl = facebookUrl
        self.twitterUrl = twitterUrl
        self.gitHubUrl = gitHubUrl
        self.linkedInUrl = linkedInUrl
        self.instagramUrl = instagramUrl
        self.youTubeUrl = youTubeUrl
        self.whatsAppNumber = whatsAppNumber
        self.supportPhoneNumber = supportPhoneNumber
        self.taxId = taxId
        self.about = about
        self.currencyId = currencyId
        self.timezoneId = timezoneId
        self.languageId = languageId
        self.countryId = countryId
        self.stateId = stateId
        self.cityId = cityId
        self.email = email
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case duns
        case slogan
        case legalName
        case phone
        case webUrl
        case twitterUsername
        case facebookUrl
        case twitterUrl
        case gitHubUrl
        case linkedInUrl
        case instagramUrl
        case youTubeUrl
        case whatsAppNumber
        case supportPhoneNumber
        case taxId
        case about
        case currencyId
        case timezoneId
        case languageId
        case countryId
        case stateId
        case cityId
        case email
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(duns, forKey: .duns)
        try container.encodeIfPresent(slogan, forKey: .slogan)
        try container.encodeIfPresent(legalName, forKey: .legalName)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(webUrl, forKey: .webUrl)
        try container.encodeIfPresent(twitterUsername, forKey: .twitterUsername)
        try container.encodeIfPresent(facebookUrl, forKey: .facebookUrl)
        try container.encodeIfPresent(twitterUrl, forKey: .twitterUrl)
        try container.encodeIfPresent(gitHubUrl, forKey: .gitHubUrl)
        try container.encodeIfPresent(linkedInUrl, forKey: .linkedInUrl)
        try container.encodeIfPresent(instagramUrl, forKey: .instagramUrl)
        try container.encodeIfPresent(youTubeUrl, forKey: .youTubeUrl)
        try container.encodeIfPresent(whatsAppNumber, forKey: .whatsAppNumber)
        try container.encodeIfPresent(supportPhoneNumber, forKey: .supportPhoneNumber)
        try container.encodeIfPresent(taxId, forKey: .taxId)
        try container.encodeIfPresent(about, forKey: .about)
        try container.encodeIfPresent(currencyId, forKey: .currencyId)
        try container.encodeIfPresent(timezoneId, forKey: .timezoneId)
        try container.encodeIfPresent(languageId, forKey: .languageId)
        try container.encodeIfPresent(countryId, forKey: .countryId)
        try container.encodeIfPresent(stateId, forKey: .stateId)
        try container.encodeIfPresent(cityId, forKey: .cityId)
        try container.encodeIfPresent(email, forKey: .email)
    }
}

