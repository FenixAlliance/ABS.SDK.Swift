//
// SocialMediaPostCreateDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SocialMediaPostCreateDto: Codable, JSONEncodable, Hashable {

    static let titleRule = StringRule(minLength: 0, maxLength: 99, pattern: nil)
    static let tenantIdRule = StringRule(minLength: 0, maxLength: 36, pattern: nil)
    static let socialPostBucketIdRule = StringRule(minLength: 0, maxLength: 36, pattern: nil)
    static let enrolmentIdRule = StringRule(minLength: 0, maxLength: 36, pattern: nil)
    public var title: String?
    public var content: String?
    public var featuredImageUrl: String?
    public var tenantId: String?
    public var socialPostBucketId: String?
    public var enrolmentId: String?

    public init(title: String? = nil, content: String? = nil, featuredImageUrl: String? = nil, tenantId: String? = nil, socialPostBucketId: String? = nil, enrolmentId: String? = nil) {
        self.title = title
        self.content = content
        self.featuredImageUrl = featuredImageUrl
        self.tenantId = tenantId
        self.socialPostBucketId = socialPostBucketId
        self.enrolmentId = enrolmentId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case content
        case featuredImageUrl
        case tenantId
        case socialPostBucketId
        case enrolmentId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(featuredImageUrl, forKey: .featuredImageUrl)
        try container.encodeIfPresent(tenantId, forKey: .tenantId)
        try container.encodeIfPresent(socialPostBucketId, forKey: .socialPostBucketId)
        try container.encodeIfPresent(enrolmentId, forKey: .enrolmentId)
    }
}

