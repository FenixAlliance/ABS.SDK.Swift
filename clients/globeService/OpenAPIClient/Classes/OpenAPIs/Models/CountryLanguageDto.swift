//
// CountryLanguageDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CountryLanguageDto: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var timestamp: Date?
    public var iso6391: String?
    public var iso6392: String?
    public var enabled: Bool?
    public var name: String?
    public var languageNativeName: String?

    public init(id: String? = nil, timestamp: Date? = nil, iso6391: String? = nil, iso6392: String? = nil, enabled: Bool? = nil, name: String? = nil, languageNativeName: String? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.iso6391 = iso6391
        self.iso6392 = iso6392
        self.enabled = enabled
        self.name = name
        self.languageNativeName = languageNativeName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case iso6391 = "iso639_1"
        case iso6392 = "iso639_2"
        case enabled
        case name
        case languageNativeName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(iso6391, forKey: .iso6391)
        try container.encodeIfPresent(iso6392, forKey: .iso6392)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(languageNativeName, forKey: .languageNativeName)
    }
}

