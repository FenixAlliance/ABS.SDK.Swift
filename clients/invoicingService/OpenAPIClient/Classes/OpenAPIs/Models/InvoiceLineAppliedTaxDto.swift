//
// InvoiceLineAppliedTaxDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct InvoiceLineAppliedTaxDto: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var timestamp: Date?
    public var tenantId: String?
    public var invoiceId: String?
    public var enrollmentId: String?
    public var invoiceLineId: String?
    public var taxPolicyId: String?
    public var itemPriceId: String?
    public var itemId: String?
    public var taxAmountInUsd: Double?
    public var taxBaseAmountInUsd: Double?
    public var taxPolicyName: String?
    public var taxPolicyDescription: String?

    public init(id: String? = nil, timestamp: Date? = nil, tenantId: String? = nil, invoiceId: String? = nil, enrollmentId: String? = nil, invoiceLineId: String? = nil, taxPolicyId: String? = nil, itemPriceId: String? = nil, itemId: String? = nil, taxAmountInUsd: Double? = nil, taxBaseAmountInUsd: Double? = nil, taxPolicyName: String? = nil, taxPolicyDescription: String? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.tenantId = tenantId
        self.invoiceId = invoiceId
        self.enrollmentId = enrollmentId
        self.invoiceLineId = invoiceLineId
        self.taxPolicyId = taxPolicyId
        self.itemPriceId = itemPriceId
        self.itemId = itemId
        self.taxAmountInUsd = taxAmountInUsd
        self.taxBaseAmountInUsd = taxBaseAmountInUsd
        self.taxPolicyName = taxPolicyName
        self.taxPolicyDescription = taxPolicyDescription
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case tenantId
        case invoiceId
        case enrollmentId
        case invoiceLineId
        case taxPolicyId
        case itemPriceId
        case itemId
        case taxAmountInUsd
        case taxBaseAmountInUsd
        case taxPolicyName
        case taxPolicyDescription
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(tenantId, forKey: .tenantId)
        try container.encodeIfPresent(invoiceId, forKey: .invoiceId)
        try container.encodeIfPresent(enrollmentId, forKey: .enrollmentId)
        try container.encodeIfPresent(invoiceLineId, forKey: .invoiceLineId)
        try container.encodeIfPresent(taxPolicyId, forKey: .taxPolicyId)
        try container.encodeIfPresent(itemPriceId, forKey: .itemPriceId)
        try container.encodeIfPresent(itemId, forKey: .itemId)
        try container.encodeIfPresent(taxAmountInUsd, forKey: .taxAmountInUsd)
        try container.encodeIfPresent(taxBaseAmountInUsd, forKey: .taxBaseAmountInUsd)
        try container.encodeIfPresent(taxPolicyName, forKey: .taxPolicyName)
        try container.encodeIfPresent(taxPolicyDescription, forKey: .taxPolicyDescription)
    }
}

