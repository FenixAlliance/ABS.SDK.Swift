//
// Blob.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Blob: Codable, JSONEncodable, Hashable {

    public enum Kind: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public var kind: Kind?
    public var isFolder: Bool?
    public var isFile: Bool?
    public var folderPath: String?
    public var name: String?
    public var size: Int64?
    public var md5: String?
    public var createdTime: Date?
    public var lastModificationTime: Date?
    public var fullPath: String?
    public var properties: [String: AnyCodable]?
    public var metadata: [String: String]?
    public var isRootFolder: Bool?

    public init(kind: Kind? = nil, isFolder: Bool? = nil, isFile: Bool? = nil, folderPath: String? = nil, name: String? = nil, size: Int64? = nil, md5: String? = nil, createdTime: Date? = nil, lastModificationTime: Date? = nil, fullPath: String? = nil, properties: [String: AnyCodable]? = nil, metadata: [String: String]? = nil, isRootFolder: Bool? = nil) {
        self.kind = kind
        self.isFolder = isFolder
        self.isFile = isFile
        self.folderPath = folderPath
        self.name = name
        self.size = size
        self.md5 = md5
        self.createdTime = createdTime
        self.lastModificationTime = lastModificationTime
        self.fullPath = fullPath
        self.properties = properties
        self.metadata = metadata
        self.isRootFolder = isRootFolder
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case kind
        case isFolder
        case isFile
        case folderPath
        case name
        case size
        case md5
        case createdTime
        case lastModificationTime
        case fullPath
        case properties
        case metadata
        case isRootFolder
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(kind, forKey: .kind)
        try container.encodeIfPresent(isFolder, forKey: .isFolder)
        try container.encodeIfPresent(isFile, forKey: .isFile)
        try container.encodeIfPresent(folderPath, forKey: .folderPath)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(md5, forKey: .md5)
        try container.encodeIfPresent(createdTime, forKey: .createdTime)
        try container.encodeIfPresent(lastModificationTime, forKey: .lastModificationTime)
        try container.encodeIfPresent(fullPath, forKey: .fullPath)
        try container.encodeIfPresent(properties, forKey: .properties)
        try container.encodeIfPresent(metadata, forKey: .metadata)
        try container.encodeIfPresent(isRootFolder, forKey: .isRootFolder)
    }
}

