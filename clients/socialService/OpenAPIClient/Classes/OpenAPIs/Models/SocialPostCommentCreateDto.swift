//
// SocialPostCommentCreateDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SocialPostCommentCreateDto: Codable, JSONEncodable, Hashable {

    static let messageRule = StringRule(minLength: 1, maxLength: 280, pattern: "/^[\\w\\s\\.\\,\\!\\?\\-\\(\\)\\[\\]\\{\\}\\'\\\"\\:\\;]{1,280}$/")
    public var id: UUID?
    public var timestamp: Date?
    public var message: String
    public var parentCommentId: String?
    public var socialProfileId: String?
    public var socialFeedPostId: String?
    public var socialPostId: String?

    public init(id: UUID? = nil, timestamp: Date? = nil, message: String, parentCommentId: String? = nil, socialProfileId: String? = nil, socialFeedPostId: String? = nil, socialPostId: String? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.message = message
        self.parentCommentId = parentCommentId
        self.socialProfileId = socialProfileId
        self.socialFeedPostId = socialFeedPostId
        self.socialPostId = socialPostId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case message
        case parentCommentId
        case socialProfileId
        case socialFeedPostId
        case socialPostId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encode(message, forKey: .message)
        try container.encodeIfPresent(parentCommentId, forKey: .parentCommentId)
        try container.encodeIfPresent(socialProfileId, forKey: .socialProfileId)
        try container.encodeIfPresent(socialFeedPostId, forKey: .socialFeedPostId)
        try container.encodeIfPresent(socialPostId, forKey: .socialPostId)
    }
}

