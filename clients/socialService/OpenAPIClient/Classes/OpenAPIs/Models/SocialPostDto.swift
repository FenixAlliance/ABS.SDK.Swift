//
// SocialPostDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SocialPostDto: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var timestamp: Date?
    public var title: String?
    public var message: String?
    public var socialProfileId: String?
    public var socialProfileName: String?
    public var socialProfileAvatarUrl: String?
    public var commentsCount: Int?
    public var reactionsCount: Int?

    public init(id: String? = nil, timestamp: Date? = nil, title: String? = nil, message: String? = nil, socialProfileId: String? = nil, socialProfileName: String? = nil, socialProfileAvatarUrl: String? = nil, commentsCount: Int? = nil, reactionsCount: Int? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.title = title
        self.message = message
        self.socialProfileId = socialProfileId
        self.socialProfileName = socialProfileName
        self.socialProfileAvatarUrl = socialProfileAvatarUrl
        self.commentsCount = commentsCount
        self.reactionsCount = reactionsCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case title
        case message
        case socialProfileId
        case socialProfileName
        case socialProfileAvatarUrl
        case commentsCount
        case reactionsCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(socialProfileId, forKey: .socialProfileId)
        try container.encodeIfPresent(socialProfileName, forKey: .socialProfileName)
        try container.encodeIfPresent(socialProfileAvatarUrl, forKey: .socialProfileAvatarUrl)
        try container.encodeIfPresent(commentsCount, forKey: .commentsCount)
        try container.encodeIfPresent(reactionsCount, forKey: .reactionsCount)
    }
}

