//
// SupportTicketConversationDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SupportTicketConversationDto: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var timestamp: Date?
    public var supportTicketID: String?
    public var topic: String?
    public var closed: Bool?
    public var closedTimestamp: Date?
    public var socialProfileID: String?

    public init(id: String? = nil, timestamp: Date? = nil, supportTicketID: String? = nil, topic: String? = nil, closed: Bool? = nil, closedTimestamp: Date? = nil, socialProfileID: String? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.supportTicketID = supportTicketID
        self.topic = topic
        self.closed = closed
        self.closedTimestamp = closedTimestamp
        self.socialProfileID = socialProfileID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case supportTicketID
        case topic
        case closed
        case closedTimestamp
        case socialProfileID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(supportTicketID, forKey: .supportTicketID)
        try container.encodeIfPresent(topic, forKey: .topic)
        try container.encodeIfPresent(closed, forKey: .closed)
        try container.encodeIfPresent(closedTimestamp, forKey: .closedTimestamp)
        try container.encodeIfPresent(socialProfileID, forKey: .socialProfileID)
    }
}

