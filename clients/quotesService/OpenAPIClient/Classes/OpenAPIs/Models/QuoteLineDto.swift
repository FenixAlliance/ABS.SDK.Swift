//
// QuoteLineDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuoteLineDto: Codable, JSONEncodable, Hashable {

    public enum TaxCalculationMethod: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public enum CostCalculationMethod: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public var id: String?
    public var timestamp: Date?
    public var closed: Bool?
    public var itemId: String?
    public var itemTitle: String?
    public var itemShortDescription: String?
    public var itemPrimaryImageUrl: String?
    public var shippingPolicyId: String?
    public var tenantId: String?
    public var enrollmentId: String?
    public var currencyId: String?
    public var description: String?
    public var quantity: Double?
    public var free: Bool?
    public var freeReason: String?
    public var freeReasonCode: String?
    public var data: String?
    public var dataLabel: String?
    public var data1: String?
    public var data1Label: String?
    public var data2: String?
    public var data2Label: String?
    public var data3: String?
    public var data3Label: String?
    public var data4: String?
    public var data4Label: String?
    public var data5: String?
    public var data5Label: String?
    public var data6: String?
    public var data6Label: String?
    public var data7: String?
    public var data7Label: String?
    public var data8: String?
    public var data8Label: String?
    public var data9: String?
    public var data9Label: String?
    public var itemPriceId: String?
    public var priceListItemId: String?
    public var unitId: String?
    public var unitGroupId: String?
    public var taxCalculationMethod: TaxCalculationMethod?
    public var costCalculationMethod: CostCalculationMethod?
    public var forexRatesSnapshot: String?
    public var forexRate: Double?
    public var totalBaseAmountInUsd: Double?
    public var totalProfitInUsd: Double?
    public var totalDetailAmountInUsd: Double?
    public var totalTaxBaseInUsd: Double?
    public var totalDiscountsInUsd: Double?
    public var totalTaxesInUsd: Double?
    public var totalWithholdingTaxesInUsd: Double?
    public var totalShippingCostInUsd: Double?
    public var totalShippingTaxesInUsd: Double?
    public var totalWarrantyCostInUsd: Double?
    public var totalReturnCostInUsd: Double?
    public var totalRefundCostInUsd: Double?
    public var totalSurchargesInUsd: Double?
    public var totalAmountInUsd: Double?
    public var totalGlobalDiscountsInUsd: Double?
    public var totalGlobalSurchargesInUsd: Double?
    public var customGlobalSurchargesAmount: Double?
    public var customGlobalDiscountsAmount: Double?
    public var customBaseAmount: Double?
    public var customDetailAmount: Double?
    public var customDiscountsAmount: Double?
    public var customTaxBase: Double?
    public var customSurchargesAmount: Double?
    public var customProfitAmount: Double?
    public var customShippingCostAmount: Double?
    public var customShippingTaxAmount: Double?
    public var customTaxAmount: Double?
    public var customWithholdingTaxAmount: Double?
    public var customTotalAmount: Double?
    public var returnPolicyId: String?
    public var refundPolicyId: String?
    public var warrantyPolicyId: String?
    public var shipmentPolicyId: String?
    public var shippingLocationId: String?
    public var locationId: String?
    public var quoteItemRecordId: String?
    public var businessProfileRecordId: String?
    public var parentBillingItemRecordId: String?
    public var quoteId: String?

    public init(id: String? = nil, timestamp: Date? = nil, closed: Bool? = nil, itemId: String? = nil, itemTitle: String? = nil, itemShortDescription: String? = nil, itemPrimaryImageUrl: String? = nil, shippingPolicyId: String? = nil, tenantId: String? = nil, enrollmentId: String? = nil, currencyId: String? = nil, description: String? = nil, quantity: Double? = nil, free: Bool? = nil, freeReason: String? = nil, freeReasonCode: String? = nil, data: String? = nil, dataLabel: String? = nil, data1: String? = nil, data1Label: String? = nil, data2: String? = nil, data2Label: String? = nil, data3: String? = nil, data3Label: String? = nil, data4: String? = nil, data4Label: String? = nil, data5: String? = nil, data5Label: String? = nil, data6: String? = nil, data6Label: String? = nil, data7: String? = nil, data7Label: String? = nil, data8: String? = nil, data8Label: String? = nil, data9: String? = nil, data9Label: String? = nil, itemPriceId: String? = nil, priceListItemId: String? = nil, unitId: String? = nil, unitGroupId: String? = nil, taxCalculationMethod: TaxCalculationMethod? = nil, costCalculationMethod: CostCalculationMethod? = nil, forexRatesSnapshot: String? = nil, forexRate: Double? = nil, totalBaseAmountInUsd: Double? = nil, totalProfitInUsd: Double? = nil, totalDetailAmountInUsd: Double? = nil, totalTaxBaseInUsd: Double? = nil, totalDiscountsInUsd: Double? = nil, totalTaxesInUsd: Double? = nil, totalWithholdingTaxesInUsd: Double? = nil, totalShippingCostInUsd: Double? = nil, totalShippingTaxesInUsd: Double? = nil, totalWarrantyCostInUsd: Double? = nil, totalReturnCostInUsd: Double? = nil, totalRefundCostInUsd: Double? = nil, totalSurchargesInUsd: Double? = nil, totalAmountInUsd: Double? = nil, totalGlobalDiscountsInUsd: Double? = nil, totalGlobalSurchargesInUsd: Double? = nil, customGlobalSurchargesAmount: Double? = nil, customGlobalDiscountsAmount: Double? = nil, customBaseAmount: Double? = nil, customDetailAmount: Double? = nil, customDiscountsAmount: Double? = nil, customTaxBase: Double? = nil, customSurchargesAmount: Double? = nil, customProfitAmount: Double? = nil, customShippingCostAmount: Double? = nil, customShippingTaxAmount: Double? = nil, customTaxAmount: Double? = nil, customWithholdingTaxAmount: Double? = nil, customTotalAmount: Double? = nil, returnPolicyId: String? = nil, refundPolicyId: String? = nil, warrantyPolicyId: String? = nil, shipmentPolicyId: String? = nil, shippingLocationId: String? = nil, locationId: String? = nil, quoteItemRecordId: String? = nil, businessProfileRecordId: String? = nil, parentBillingItemRecordId: String? = nil, quoteId: String? = nil) {
        self.id = id
        self.timestamp = timestamp
        self.closed = closed
        self.itemId = itemId
        self.itemTitle = itemTitle
        self.itemShortDescription = itemShortDescription
        self.itemPrimaryImageUrl = itemPrimaryImageUrl
        self.shippingPolicyId = shippingPolicyId
        self.tenantId = tenantId
        self.enrollmentId = enrollmentId
        self.currencyId = currencyId
        self.description = description
        self.quantity = quantity
        self.free = free
        self.freeReason = freeReason
        self.freeReasonCode = freeReasonCode
        self.data = data
        self.dataLabel = dataLabel
        self.data1 = data1
        self.data1Label = data1Label
        self.data2 = data2
        self.data2Label = data2Label
        self.data3 = data3
        self.data3Label = data3Label
        self.data4 = data4
        self.data4Label = data4Label
        self.data5 = data5
        self.data5Label = data5Label
        self.data6 = data6
        self.data6Label = data6Label
        self.data7 = data7
        self.data7Label = data7Label
        self.data8 = data8
        self.data8Label = data8Label
        self.data9 = data9
        self.data9Label = data9Label
        self.itemPriceId = itemPriceId
        self.priceListItemId = priceListItemId
        self.unitId = unitId
        self.unitGroupId = unitGroupId
        self.taxCalculationMethod = taxCalculationMethod
        self.costCalculationMethod = costCalculationMethod
        self.forexRatesSnapshot = forexRatesSnapshot
        self.forexRate = forexRate
        self.totalBaseAmountInUsd = totalBaseAmountInUsd
        self.totalProfitInUsd = totalProfitInUsd
        self.totalDetailAmountInUsd = totalDetailAmountInUsd
        self.totalTaxBaseInUsd = totalTaxBaseInUsd
        self.totalDiscountsInUsd = totalDiscountsInUsd
        self.totalTaxesInUsd = totalTaxesInUsd
        self.totalWithholdingTaxesInUsd = totalWithholdingTaxesInUsd
        self.totalShippingCostInUsd = totalShippingCostInUsd
        self.totalShippingTaxesInUsd = totalShippingTaxesInUsd
        self.totalWarrantyCostInUsd = totalWarrantyCostInUsd
        self.totalReturnCostInUsd = totalReturnCostInUsd
        self.totalRefundCostInUsd = totalRefundCostInUsd
        self.totalSurchargesInUsd = totalSurchargesInUsd
        self.totalAmountInUsd = totalAmountInUsd
        self.totalGlobalDiscountsInUsd = totalGlobalDiscountsInUsd
        self.totalGlobalSurchargesInUsd = totalGlobalSurchargesInUsd
        self.customGlobalSurchargesAmount = customGlobalSurchargesAmount
        self.customGlobalDiscountsAmount = customGlobalDiscountsAmount
        self.customBaseAmount = customBaseAmount
        self.customDetailAmount = customDetailAmount
        self.customDiscountsAmount = customDiscountsAmount
        self.customTaxBase = customTaxBase
        self.customSurchargesAmount = customSurchargesAmount
        self.customProfitAmount = customProfitAmount
        self.customShippingCostAmount = customShippingCostAmount
        self.customShippingTaxAmount = customShippingTaxAmount
        self.customTaxAmount = customTaxAmount
        self.customWithholdingTaxAmount = customWithholdingTaxAmount
        self.customTotalAmount = customTotalAmount
        self.returnPolicyId = returnPolicyId
        self.refundPolicyId = refundPolicyId
        self.warrantyPolicyId = warrantyPolicyId
        self.shipmentPolicyId = shipmentPolicyId
        self.shippingLocationId = shippingLocationId
        self.locationId = locationId
        self.quoteItemRecordId = quoteItemRecordId
        self.businessProfileRecordId = businessProfileRecordId
        self.parentBillingItemRecordId = parentBillingItemRecordId
        self.quoteId = quoteId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case closed
        case itemId
        case itemTitle
        case itemShortDescription
        case itemPrimaryImageUrl
        case shippingPolicyId
        case tenantId
        case enrollmentId
        case currencyId
        case description
        case quantity
        case free
        case freeReason
        case freeReasonCode
        case data
        case dataLabel
        case data1
        case data1Label
        case data2
        case data2Label
        case data3
        case data3Label
        case data4
        case data4Label
        case data5
        case data5Label
        case data6
        case data6Label
        case data7
        case data7Label
        case data8
        case data8Label
        case data9
        case data9Label
        case itemPriceId
        case priceListItemId
        case unitId
        case unitGroupId
        case taxCalculationMethod
        case costCalculationMethod
        case forexRatesSnapshot
        case forexRate
        case totalBaseAmountInUsd
        case totalProfitInUsd
        case totalDetailAmountInUsd
        case totalTaxBaseInUsd
        case totalDiscountsInUsd
        case totalTaxesInUsd
        case totalWithholdingTaxesInUsd
        case totalShippingCostInUsd
        case totalShippingTaxesInUsd
        case totalWarrantyCostInUsd
        case totalReturnCostInUsd
        case totalRefundCostInUsd
        case totalSurchargesInUsd
        case totalAmountInUsd
        case totalGlobalDiscountsInUsd
        case totalGlobalSurchargesInUsd
        case customGlobalSurchargesAmount
        case customGlobalDiscountsAmount
        case customBaseAmount
        case customDetailAmount
        case customDiscountsAmount
        case customTaxBase
        case customSurchargesAmount
        case customProfitAmount
        case customShippingCostAmount
        case customShippingTaxAmount
        case customTaxAmount
        case customWithholdingTaxAmount
        case customTotalAmount
        case returnPolicyId
        case refundPolicyId
        case warrantyPolicyId
        case shipmentPolicyId
        case shippingLocationId
        case locationId
        case quoteItemRecordId
        case businessProfileRecordId
        case parentBillingItemRecordId
        case quoteId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(closed, forKey: .closed)
        try container.encodeIfPresent(itemId, forKey: .itemId)
        try container.encodeIfPresent(itemTitle, forKey: .itemTitle)
        try container.encodeIfPresent(itemShortDescription, forKey: .itemShortDescription)
        try container.encodeIfPresent(itemPrimaryImageUrl, forKey: .itemPrimaryImageUrl)
        try container.encodeIfPresent(shippingPolicyId, forKey: .shippingPolicyId)
        try container.encodeIfPresent(tenantId, forKey: .tenantId)
        try container.encodeIfPresent(enrollmentId, forKey: .enrollmentId)
        try container.encodeIfPresent(currencyId, forKey: .currencyId)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(quantity, forKey: .quantity)
        try container.encodeIfPresent(free, forKey: .free)
        try container.encodeIfPresent(freeReason, forKey: .freeReason)
        try container.encodeIfPresent(freeReasonCode, forKey: .freeReasonCode)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encodeIfPresent(dataLabel, forKey: .dataLabel)
        try container.encodeIfPresent(data1, forKey: .data1)
        try container.encodeIfPresent(data1Label, forKey: .data1Label)
        try container.encodeIfPresent(data2, forKey: .data2)
        try container.encodeIfPresent(data2Label, forKey: .data2Label)
        try container.encodeIfPresent(data3, forKey: .data3)
        try container.encodeIfPresent(data3Label, forKey: .data3Label)
        try container.encodeIfPresent(data4, forKey: .data4)
        try container.encodeIfPresent(data4Label, forKey: .data4Label)
        try container.encodeIfPresent(data5, forKey: .data5)
        try container.encodeIfPresent(data5Label, forKey: .data5Label)
        try container.encodeIfPresent(data6, forKey: .data6)
        try container.encodeIfPresent(data6Label, forKey: .data6Label)
        try container.encodeIfPresent(data7, forKey: .data7)
        try container.encodeIfPresent(data7Label, forKey: .data7Label)
        try container.encodeIfPresent(data8, forKey: .data8)
        try container.encodeIfPresent(data8Label, forKey: .data8Label)
        try container.encodeIfPresent(data9, forKey: .data9)
        try container.encodeIfPresent(data9Label, forKey: .data9Label)
        try container.encodeIfPresent(itemPriceId, forKey: .itemPriceId)
        try container.encodeIfPresent(priceListItemId, forKey: .priceListItemId)
        try container.encodeIfPresent(unitId, forKey: .unitId)
        try container.encodeIfPresent(unitGroupId, forKey: .unitGroupId)
        try container.encodeIfPresent(taxCalculationMethod, forKey: .taxCalculationMethod)
        try container.encodeIfPresent(costCalculationMethod, forKey: .costCalculationMethod)
        try container.encodeIfPresent(forexRatesSnapshot, forKey: .forexRatesSnapshot)
        try container.encodeIfPresent(forexRate, forKey: .forexRate)
        try container.encodeIfPresent(totalBaseAmountInUsd, forKey: .totalBaseAmountInUsd)
        try container.encodeIfPresent(totalProfitInUsd, forKey: .totalProfitInUsd)
        try container.encodeIfPresent(totalDetailAmountInUsd, forKey: .totalDetailAmountInUsd)
        try container.encodeIfPresent(totalTaxBaseInUsd, forKey: .totalTaxBaseInUsd)
        try container.encodeIfPresent(totalDiscountsInUsd, forKey: .totalDiscountsInUsd)
        try container.encodeIfPresent(totalTaxesInUsd, forKey: .totalTaxesInUsd)
        try container.encodeIfPresent(totalWithholdingTaxesInUsd, forKey: .totalWithholdingTaxesInUsd)
        try container.encodeIfPresent(totalShippingCostInUsd, forKey: .totalShippingCostInUsd)
        try container.encodeIfPresent(totalShippingTaxesInUsd, forKey: .totalShippingTaxesInUsd)
        try container.encodeIfPresent(totalWarrantyCostInUsd, forKey: .totalWarrantyCostInUsd)
        try container.encodeIfPresent(totalReturnCostInUsd, forKey: .totalReturnCostInUsd)
        try container.encodeIfPresent(totalRefundCostInUsd, forKey: .totalRefundCostInUsd)
        try container.encodeIfPresent(totalSurchargesInUsd, forKey: .totalSurchargesInUsd)
        try container.encodeIfPresent(totalAmountInUsd, forKey: .totalAmountInUsd)
        try container.encodeIfPresent(totalGlobalDiscountsInUsd, forKey: .totalGlobalDiscountsInUsd)
        try container.encodeIfPresent(totalGlobalSurchargesInUsd, forKey: .totalGlobalSurchargesInUsd)
        try container.encodeIfPresent(customGlobalSurchargesAmount, forKey: .customGlobalSurchargesAmount)
        try container.encodeIfPresent(customGlobalDiscountsAmount, forKey: .customGlobalDiscountsAmount)
        try container.encodeIfPresent(customBaseAmount, forKey: .customBaseAmount)
        try container.encodeIfPresent(customDetailAmount, forKey: .customDetailAmount)
        try container.encodeIfPresent(customDiscountsAmount, forKey: .customDiscountsAmount)
        try container.encodeIfPresent(customTaxBase, forKey: .customTaxBase)
        try container.encodeIfPresent(customSurchargesAmount, forKey: .customSurchargesAmount)
        try container.encodeIfPresent(customProfitAmount, forKey: .customProfitAmount)
        try container.encodeIfPresent(customShippingCostAmount, forKey: .customShippingCostAmount)
        try container.encodeIfPresent(customShippingTaxAmount, forKey: .customShippingTaxAmount)
        try container.encodeIfPresent(customTaxAmount, forKey: .customTaxAmount)
        try container.encodeIfPresent(customWithholdingTaxAmount, forKey: .customWithholdingTaxAmount)
        try container.encodeIfPresent(customTotalAmount, forKey: .customTotalAmount)
        try container.encodeIfPresent(returnPolicyId, forKey: .returnPolicyId)
        try container.encodeIfPresent(refundPolicyId, forKey: .refundPolicyId)
        try container.encodeIfPresent(warrantyPolicyId, forKey: .warrantyPolicyId)
        try container.encodeIfPresent(shipmentPolicyId, forKey: .shipmentPolicyId)
        try container.encodeIfPresent(shippingLocationId, forKey: .shippingLocationId)
        try container.encodeIfPresent(locationId, forKey: .locationId)
        try container.encodeIfPresent(quoteItemRecordId, forKey: .quoteItemRecordId)
        try container.encodeIfPresent(businessProfileRecordId, forKey: .businessProfileRecordId)
        try container.encodeIfPresent(parentBillingItemRecordId, forKey: .parentBillingItemRecordId)
        try container.encodeIfPresent(quoteId, forKey: .quoteId)
    }
}

