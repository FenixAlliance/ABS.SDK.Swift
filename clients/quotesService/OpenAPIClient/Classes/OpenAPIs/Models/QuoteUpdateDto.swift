//
// QuoteUpdateDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuoteUpdateDto: Codable, JSONEncodable, Hashable {

    public enum QuoteStatus: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case _4 = 4
    }
    public enum FreightTerms: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public enum CostCalculationMethod: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
    }
    public var closed: Bool?
    public var title: String?
    public var userId: String?
    public var tenantId: String?
    public var forexRate: Double?
    public var currencyId: String?
    public var priceListId: String?
    public var description: String?
    public var enrollmentId: String?
    public var individualId: String?
    public var paymentTermId: String?
    public var organizationId: String?
    public var receiverTenantId: String?
    public var firstName: String?
    public var lastName: String?
    public var companyName: String?
    public var billingEmail: String?
    public var addressLine1: String?
    public var addressLine2: String?
    public var postalCode: String?
    public var countryId: String?
    public var stateId: String?
    public var cityId: String?
    public var billingLocationId: String?
    public var shippingLocationId: String?
    public var shippingMethodId: String?
    public var cartId: String?
    public var total: Double?
    public var totalTaxes: Double?
    public var quoteStatus: QuoteStatus?
    public var freightTerms: FreightTerms?
    public var costCalculationMethod: CostCalculationMethod?
    public var effectiveTo: Date?
    public var effectiveFrom: Date?
    public var customTaxAmount: Double?
    public var customTotalAmount: Double?
    public var customDetailAmount: Double?
    public var customProfitAmount: Double?
    public var customDiscountsAmount: Double?
    public var customSurchargesAmount: Double?
    public var customShippingCostAmount: Double?
    public var customShippingTaxAmount: Double?
    public var customWithholdingTaxAmount: Double?

    public init(closed: Bool? = nil, title: String? = nil, userId: String? = nil, tenantId: String? = nil, forexRate: Double? = nil, currencyId: String? = nil, priceListId: String? = nil, description: String? = nil, enrollmentId: String? = nil, individualId: String? = nil, paymentTermId: String? = nil, organizationId: String? = nil, receiverTenantId: String? = nil, firstName: String? = nil, lastName: String? = nil, companyName: String? = nil, billingEmail: String? = nil, addressLine1: String? = nil, addressLine2: String? = nil, postalCode: String? = nil, countryId: String? = nil, stateId: String? = nil, cityId: String? = nil, billingLocationId: String? = nil, shippingLocationId: String? = nil, shippingMethodId: String? = nil, cartId: String? = nil, total: Double? = nil, totalTaxes: Double? = nil, quoteStatus: QuoteStatus? = nil, freightTerms: FreightTerms? = nil, costCalculationMethod: CostCalculationMethod? = nil, effectiveTo: Date? = nil, effectiveFrom: Date? = nil, customTaxAmount: Double? = nil, customTotalAmount: Double? = nil, customDetailAmount: Double? = nil, customProfitAmount: Double? = nil, customDiscountsAmount: Double? = nil, customSurchargesAmount: Double? = nil, customShippingCostAmount: Double? = nil, customShippingTaxAmount: Double? = nil, customWithholdingTaxAmount: Double? = nil) {
        self.closed = closed
        self.title = title
        self.userId = userId
        self.tenantId = tenantId
        self.forexRate = forexRate
        self.currencyId = currencyId
        self.priceListId = priceListId
        self.description = description
        self.enrollmentId = enrollmentId
        self.individualId = individualId
        self.paymentTermId = paymentTermId
        self.organizationId = organizationId
        self.receiverTenantId = receiverTenantId
        self.firstName = firstName
        self.lastName = lastName
        self.companyName = companyName
        self.billingEmail = billingEmail
        self.addressLine1 = addressLine1
        self.addressLine2 = addressLine2
        self.postalCode = postalCode
        self.countryId = countryId
        self.stateId = stateId
        self.cityId = cityId
        self.billingLocationId = billingLocationId
        self.shippingLocationId = shippingLocationId
        self.shippingMethodId = shippingMethodId
        self.cartId = cartId
        self.total = total
        self.totalTaxes = totalTaxes
        self.quoteStatus = quoteStatus
        self.freightTerms = freightTerms
        self.costCalculationMethod = costCalculationMethod
        self.effectiveTo = effectiveTo
        self.effectiveFrom = effectiveFrom
        self.customTaxAmount = customTaxAmount
        self.customTotalAmount = customTotalAmount
        self.customDetailAmount = customDetailAmount
        self.customProfitAmount = customProfitAmount
        self.customDiscountsAmount = customDiscountsAmount
        self.customSurchargesAmount = customSurchargesAmount
        self.customShippingCostAmount = customShippingCostAmount
        self.customShippingTaxAmount = customShippingTaxAmount
        self.customWithholdingTaxAmount = customWithholdingTaxAmount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case closed
        case title
        case userId
        case tenantId
        case forexRate
        case currencyId
        case priceListId
        case description
        case enrollmentId
        case individualId
        case paymentTermId
        case organizationId
        case receiverTenantId
        case firstName
        case lastName
        case companyName
        case billingEmail
        case addressLine1
        case addressLine2
        case postalCode
        case countryId
        case stateId
        case cityId
        case billingLocationId
        case shippingLocationId
        case shippingMethodId
        case cartId
        case total
        case totalTaxes
        case quoteStatus
        case freightTerms
        case costCalculationMethod
        case effectiveTo
        case effectiveFrom
        case customTaxAmount
        case customTotalAmount
        case customDetailAmount
        case customProfitAmount
        case customDiscountsAmount
        case customSurchargesAmount
        case customShippingCostAmount
        case customShippingTaxAmount
        case customWithholdingTaxAmount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(closed, forKey: .closed)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(tenantId, forKey: .tenantId)
        try container.encodeIfPresent(forexRate, forKey: .forexRate)
        try container.encodeIfPresent(currencyId, forKey: .currencyId)
        try container.encodeIfPresent(priceListId, forKey: .priceListId)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(enrollmentId, forKey: .enrollmentId)
        try container.encodeIfPresent(individualId, forKey: .individualId)
        try container.encodeIfPresent(paymentTermId, forKey: .paymentTermId)
        try container.encodeIfPresent(organizationId, forKey: .organizationId)
        try container.encodeIfPresent(receiverTenantId, forKey: .receiverTenantId)
        try container.encodeIfPresent(firstName, forKey: .firstName)
        try container.encodeIfPresent(lastName, forKey: .lastName)
        try container.encodeIfPresent(companyName, forKey: .companyName)
        try container.encodeIfPresent(billingEmail, forKey: .billingEmail)
        try container.encodeIfPresent(addressLine1, forKey: .addressLine1)
        try container.encodeIfPresent(addressLine2, forKey: .addressLine2)
        try container.encodeIfPresent(postalCode, forKey: .postalCode)
        try container.encodeIfPresent(countryId, forKey: .countryId)
        try container.encodeIfPresent(stateId, forKey: .stateId)
        try container.encodeIfPresent(cityId, forKey: .cityId)
        try container.encodeIfPresent(billingLocationId, forKey: .billingLocationId)
        try container.encodeIfPresent(shippingLocationId, forKey: .shippingLocationId)
        try container.encodeIfPresent(shippingMethodId, forKey: .shippingMethodId)
        try container.encodeIfPresent(cartId, forKey: .cartId)
        try container.encodeIfPresent(total, forKey: .total)
        try container.encodeIfPresent(totalTaxes, forKey: .totalTaxes)
        try container.encodeIfPresent(quoteStatus, forKey: .quoteStatus)
        try container.encodeIfPresent(freightTerms, forKey: .freightTerms)
        try container.encodeIfPresent(costCalculationMethod, forKey: .costCalculationMethod)
        try container.encodeIfPresent(effectiveTo, forKey: .effectiveTo)
        try container.encodeIfPresent(effectiveFrom, forKey: .effectiveFrom)
        try container.encodeIfPresent(customTaxAmount, forKey: .customTaxAmount)
        try container.encodeIfPresent(customTotalAmount, forKey: .customTotalAmount)
        try container.encodeIfPresent(customDetailAmount, forKey: .customDetailAmount)
        try container.encodeIfPresent(customProfitAmount, forKey: .customProfitAmount)
        try container.encodeIfPresent(customDiscountsAmount, forKey: .customDiscountsAmount)
        try container.encodeIfPresent(customSurchargesAmount, forKey: .customSurchargesAmount)
        try container.encodeIfPresent(customShippingCostAmount, forKey: .customShippingCostAmount)
        try container.encodeIfPresent(customShippingTaxAmount, forKey: .customShippingTaxAmount)
        try container.encodeIfPresent(customWithholdingTaxAmount, forKey: .customWithholdingTaxAmount)
    }
}

